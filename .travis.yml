# En supposant que le fichier .travis.yml se trouve dans le répertoire du projet et qu'il existe un sous-répertoire distinct pour chaque service.
# Utilisez les commandes `docker-compose` ou les commandes `docker build` individuelles.

language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

### udagram-api-feed
script:
  - docker --version # print the version for logging
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker tag udagram-api-feed cesairenj/udagram-api-feed:latest
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push cesairenj/udagram-api-feed:latest
  ### udagram-api-user
  - docker --version # print the version for logging
  - docker build -t udagram-api-user ./udagram-api-user
  - docker tag udagram-api-user cesairenj/udagram-api-user:latest
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push cesairenj/udagram-api-user:latest
  ### udagram-frontend
  - docker --version # print the version for logging
  - docker build -t udagram-frontend ./udagram-frontend
  - docker tag udagram-frontend cesairenj/udagram-frontend:latest
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push cesairenj/udagram-frontend:latest
  ### reverseproxy
  - docker --version # print the version for logging
  - docker build -t reverseproxy ./reverseproxy
  - docker tag reverseproxy cesairenj/reverseproxy:latest
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push cesairenj/reverseproxy:latest
